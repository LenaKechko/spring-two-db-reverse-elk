version: '3.9'

services:

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    expose:
      - 5432
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=pass
      - POSTGRES_PORT=5432
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgresvolume:/var/lib/postgresql/data
    networks:
      - elk

  mongo:
    image: mongo:7.0.8
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - elk

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.13.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk
    volumes:
      - elasticvolume:/usr/share/elasticsearch/data

  logstash:
    container_name: logstash
    build:
      context: ./logstash/
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - CONFIG_SUPPORT_ESCAPE=true
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
      - postgres
      - mongo
    networks:
      - elk
    volumes:
      - logstashvolume:/usr/share/logstash/data

networks:
  elk:
    driver: bridge

volumes:
  postgresvolume:
  elasticvolume:
  logstashvolume:


 